{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lawrence\\\\CORD-19\\\\frontend\\\\src\\\\Components\\\\Article.js\";\nimport React, { useState } from \"react\";\nimport AbstractDetails from \"./AbstractDetails\";\nimport { NavLink } from \"react-router-dom\";\nimport Collapsible from \"react-collapsible\";\n\nconst Article = ({\n  article,\n  abstractHighlights,\n  sentToDisplay,\n  abstractHighlightModel\n}) => {\n  const [showAbstract, setShowAbstract] = useState(false);\n  const {\n    paper_id,\n    title,\n    doc_date,\n    authors,\n    abstract,\n    answer\n  } = article;\n  const author = authors.join(\", \");\n  var MAX_ITEMS = 3;\n  const [open, setOpen] = useState(false);\n\n  function toggle() {\n    setOpen(!open);\n  }\n\n  function getRenderedItems() {\n    if (open) {\n      return answer.sents;\n    }\n\n    return answer.sents.slice(0, MAX_ITEMS);\n  }\n\n  function checkSentsToDisplay() {\n    if (answer === undefined) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"main_answer_list_title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }, \"No Relavant Sentences !\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, \"Relavant Sentences \\xA0\\xA0|\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"button\", {\n        className: \"button\",\n        onClick: toggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }, open ? \"Show Less\" : \"Show More\"), getRenderedItems().map((item, id) => /*#__PURE__*/React.createElement(\"div\", {\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, sent_section(item, id))));\n    }\n  }\n\n  const sent_section = (item, id) => {\n    if (answer[\"sent_section\"] === undefined || answer[\"sent_section\"].length < 1) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"sentence_index\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }, \"Sentence \", id + 1, \" :\"), item);\n    } else {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"sentence_index\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, \" [\", answer.sent_section[id], \"]\"), item);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"article\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title-author-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: {\n      pathname: `/specificArticle/sentences/${paper_id}`,\n      state: {\n        article: article\n      }\n    },\n    className: \"inactive\",\n    activeClassName: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, title, \"[\\u2197\\uFE0EMore Details]\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }), \"Authors: \", author, \" \\xA0\\xA0|\\xA0\\xA0Publish Date: \", doc_date)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, checkSentsToDisplay()), showAbstract && /*#__PURE__*/React.createElement(AbstractDetails, {\n    abstract: abstract,\n    highlights: abstractHighlights,\n    highlightModel: abstractHighlightModel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Article;","map":{"version":3,"sources":["C:/Users/lawrence/CORD-19/frontend/src/Components/Article.js"],"names":["React","useState","AbstractDetails","NavLink","Collapsible","Article","article","abstractHighlights","sentToDisplay","abstractHighlightModel","showAbstract","setShowAbstract","paper_id","title","doc_date","authors","abstract","answer","author","join","MAX_ITEMS","open","setOpen","toggle","getRenderedItems","sents","slice","checkSentsToDisplay","undefined","map","item","id","sent_section","length","pathname","state"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport AbstractDetails from \"./AbstractDetails\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Collapsible from \"react-collapsible\";\r\n\r\nconst Article = ({\r\n  article,\r\n  abstractHighlights,\r\n  sentToDisplay,\r\n  abstractHighlightModel\r\n}) => {\r\n  const [showAbstract, setShowAbstract] = useState(false);\r\n  const { paper_id, title, doc_date, authors, abstract, answer } = article;\r\n  const author = authors.join(\", \");\r\n\r\n  var MAX_ITEMS = 3;\r\n  const [open, setOpen] = useState(false);\r\n  function toggle() {\r\n    setOpen(!open);\r\n  }\r\n\r\n  function getRenderedItems() {\r\n    if (open) {\r\n      return answer.sents;\r\n    }\r\n    return answer.sents.slice(0, MAX_ITEMS);\r\n  }\r\n\r\n  function checkSentsToDisplay() {\r\n    if (answer === undefined) {\r\n      return (\r\n        <div className=\"main_answer_list_title\">No Relavant Sentences !</div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          {/* <div className=\"main_answer_list_title\"> */}\r\n          Relavant Sentences &nbsp;&nbsp;|&nbsp;&nbsp;\r\n          <button className=\"button\" onClick={toggle}>\r\n            {open ? \"Show Less\" : \"Show More\"}\r\n          </button>\r\n          {/* </div> */}\r\n          {getRenderedItems().map((item, id) => (\r\n            <div key={id}>{sent_section(item, id)}</div>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  const sent_section = (item, id) => {\r\n    if (\r\n      answer[\"sent_section\"] === undefined ||\r\n      answer[\"sent_section\"].length < 1\r\n    ) {\r\n      return (\r\n        <span>\r\n          <span className=\"sentence_index\">Sentence {id + 1} :</span>\r\n          {item}\r\n        </span>\r\n      );\r\n    } else {\r\n      return (\r\n        <span>\r\n          <span className=\"sentence_index\"> [{answer.sent_section[id]}]</span>\r\n          {item}\r\n        </span>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"article\">\r\n      <div className=\"title-author-date\">\r\n        {/* <div className=\"main_answer_list_title\"> */}\r\n        <NavLink\r\n          to={{\r\n            pathname: `/specificArticle/sentences/${paper_id}`,\r\n            state: { article: article }\r\n          }}\r\n          className=\"inactive\"\r\n          activeClassName=\"active\"\r\n        >\r\n          {title}[↗︎More Details]\r\n        </NavLink>\r\n        <span>\r\n          <br />\r\n          Authors: {author} &nbsp;&nbsp;|&nbsp;&nbsp;Publish Date: {doc_date}\r\n        </span>\r\n        {/* </div> */}\r\n\r\n        {/* <h3>{title}</h3>\r\n        \r\n          <NavLink\r\n            to={{\r\n              pathname: `/specificArticle/sentences/${paper_id}`,\r\n              state: { article: article }\r\n            }}\r\n            className=\"inactive\"\r\n            activeClassName=\"active\"\r\n          >\r\n            Show Details\r\n          </NavLink>\r\n          &nbsp;&nbsp;|&nbsp;&nbsp;\r\n          <button\r\n            className=\"button\"\r\n            onClick={() => setShowAbstract(!showAbstract)}\r\n          >\r\n            Show Abstract\r\n          </button>\r\n        </span> */}\r\n      </div>\r\n\r\n      {/* <div className=\"answer-list\">{checkSentsToDisplay()}</div> */}\r\n\r\n      <div className=\"answer-list\">{checkSentsToDisplay()}</div>\r\n\r\n      {showAbstract && (\r\n        <AbstractDetails\r\n          abstract={abstract}\r\n          highlights={abstractHighlights}\r\n          highlightModel={abstractHighlightModel}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Article;\r\n"]},"metadata":{},"sourceType":"module"}