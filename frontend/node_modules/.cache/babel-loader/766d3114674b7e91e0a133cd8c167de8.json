{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lawrence\\\\CORD-19\\\\frontend\\\\src\\\\Components\\\\ArticleDetailsSentence.js\";\nimport React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Dropdown from \"react-dropdown\";\nimport { NavLink } from \"react-router-dom\";\nimport Footer from \"./Footer\";\nexport default function ArticleDetailsSentence(props) {\n  const {\n    paper_id,\n    doi,\n    doc_date,\n    title,\n    authors,\n    summary,\n    answer,\n    bodyText,\n    url\n  } = props.location.state.article;\n  const article = props.location.state.article;\n  const author = authors.join(\", \");\n  var MAX_ITEMS = 1;\n  const article_url = `${url}`;\n  const section_headers = bodyText.section_header.original; //control related\n  //section header\n\n  var [sentNumber, setSentNumber] = useState({\n    value: \"all\",\n    label: \"all\"\n  });\n  const defaultOption = sentNumber;\n  const options = [{\n    value: \"<=5\",\n    label: \"Less or = 5\"\n  }, {\n    value: \"<=10\",\n    label: \"Less or = 10\"\n  }, {\n    value: \"all\",\n    label: \"all\"\n  }];\n\n  const _onSelect = option => {\n    setSentNumber(option);\n  };\n\n  const sent_section = (item, id) => {\n    if (answer[\"sent_section\"] === undefined || answer[\"sent_section\"].length < 1) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"sentence_index\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, \"Sentence \", id + 1, \" :\"), item);\n    } else {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"sentence_index\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      }, \"Sentence \", id + 1, \" :\"), item, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"sentence_index\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }, \"[\", answer.sent_section[id], \" section]\"));\n    }\n  };\n\n  function checkSents() {\n    if (props.location.state.article[\"answer\"] === undefined) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"main_answer_list_title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }, \"No Sentences answering the query!\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"main_answer_list_title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      }, \"Sentences answering the query\"), getRenderedItems().map((item, id) => /*#__PURE__*/React.createElement(\"div\", {\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }, sent_section(item, id))));\n    }\n  }\n\n  function getRenderedItems() {\n    if (sentNumber.value === \"all\") {\n      return answer.sents;\n    }\n\n    if (sentNumber.value === \"<=5\") {\n      return answer.sents.slice(0, 5);\n    }\n\n    if (sentNumber.value === \"<=10\") {\n      return answer.sents.slice(0, 10);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control_panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"article\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"Control Panel\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"article\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"Relavant Sentences\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"Number of Sentences to display:\", /*#__PURE__*/React.createElement(Dropdown, {\n    options: options,\n    onChange: _onSelect,\n    value: defaultOption,\n    placeholder: \"Select Type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"articles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"article\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title-author-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, title), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, \"Authors: \", author, \"\\xA0\\xA0|\\xA0\\xA0Publish Date: \", doc_date), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(NavLink, {\n    to: {\n      pathname: `/specificArticle/sentences/${paper_id}`,\n      state: {\n        article: article\n      }\n    },\n    className: \"inactive\",\n    activeClassName: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, \"Relevant Sentences\"), \" \", \"\\xA0\\xA0|\\xA0\\xA0\", /*#__PURE__*/React.createElement(NavLink, {\n    to: {\n      pathname: `/specificArticle/abstract/${paper_id}`,\n      state: {\n        article: article\n      }\n    },\n    className: \"inactive\",\n    activeClassName: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, \"Abstract\"), \"\\xA0\\xA0|\\xA0\\xA0\", /*#__PURE__*/React.createElement(NavLink, {\n    to: {\n      pathname: `/specificArticle/bodyText/${paper_id}`,\n      state: {\n        article: article\n      }\n    },\n    className: \"inactive\",\n    activeClassName: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, \"Body Text\"), \" \", \"\\xA0\\xA0|\\xA0\\xA0\", /*#__PURE__*/React.createElement(NavLink, {\n    to: {\n      pathname: `/specificArticle/similarPaper/${paper_id}`,\n      state: {\n        article: article\n      }\n    },\n    className: \"inactive\",\n    activeClassName: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, \"Similar Papers\"), \"\\xA0\\xA0|\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"a\", {\n    target: \"_blank\",\n    href: article_url,\n    className: \"external_link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, \"Original PDF \\u2197\\uFE0E\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, checkSents()))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/lawrence/CORD-19/frontend/src/Components/ArticleDetailsSentence.js"],"names":["React","useState","Header","Dropdown","NavLink","Footer","ArticleDetailsSentence","props","paper_id","doi","doc_date","title","authors","summary","answer","bodyText","url","location","state","article","author","join","MAX_ITEMS","article_url","section_headers","section_header","original","sentNumber","setSentNumber","value","label","defaultOption","options","_onSelect","option","sent_section","item","id","undefined","length","checkSents","getRenderedItems","map","sents","slice","pathname"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Footer from \"./Footer\";\r\n\r\nexport default function ArticleDetailsSentence(props) {\r\n  const {\r\n    paper_id,\r\n    doi,\r\n    doc_date,\r\n    title,\r\n    authors,\r\n    summary,\r\n    answer,\r\n    bodyText,\r\n    url\r\n  } = props.location.state.article;\r\n  const article = props.location.state.article;\r\n  const author = authors.join(\", \");\r\n  var MAX_ITEMS = 1;\r\n  const article_url = `${url}`;\r\n  const section_headers = bodyText.section_header.original;\r\n\r\n  //control related\r\n  //section header\r\n  var [sentNumber, setSentNumber] = useState({\r\n    value: \"all\",\r\n    label: \"all\"\r\n  });\r\n  const defaultOption = sentNumber;\r\n  const options = [\r\n    { value: \"<=5\", label: \"Less or = 5\" },\r\n    { value: \"<=10\", label: \"Less or = 10\" },\r\n    { value: \"all\", label: \"all\" }\r\n  ];\r\n  const _onSelect = option => {\r\n    setSentNumber(option);\r\n  };\r\n\r\n  const sent_section = (item, id) => {\r\n    if (\r\n      answer[\"sent_section\"] === undefined ||\r\n      answer[\"sent_section\"].length < 1\r\n    ) {\r\n      return (\r\n        <span>\r\n          <span className=\"sentence_index\">Sentence {id + 1} :</span>\r\n          {item}\r\n        </span>\r\n      );\r\n    } else {\r\n      return (\r\n        <span>\r\n          <span className=\"sentence_index\">Sentence {id + 1} :</span>\r\n          {item}\r\n          <span className=\"sentence_index\">\r\n            [{answer.sent_section[id]} section]\r\n          </span>\r\n        </span>\r\n      );\r\n    }\r\n  };\r\n\r\n  function checkSents() {\r\n    if (props.location.state.article[\"answer\"] === undefined) {\r\n      return (\r\n        <div className=\"main_answer_list_title\">\r\n          No Sentences answering the query!\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <div className=\"main_answer_list_title\">\r\n            Sentences answering the query\r\n          </div>\r\n          {getRenderedItems().map((item, id) => (\r\n            <div key={id}>{sent_section(item, id)}</div>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  function getRenderedItems() {\r\n    if (sentNumber.value === \"all\") {\r\n      return answer.sents;\r\n    }\r\n    if (sentNumber.value === \"<=5\") {\r\n      return answer.sents.slice(0, 5);\r\n    }\r\n    if (sentNumber.value === \"<=10\") {\r\n      return answer.sents.slice(0, 10);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"header\">\r\n        <Header />\r\n      </div>\r\n      <div className=\"control_panel\">\r\n        <div className=\"article\">\r\n          <div className=\"control_title\">\r\n            <h3>Control Panel</h3>\r\n          </div>\r\n        </div>\r\n        <div className=\"article\">\r\n          <div className=\"control_title\">\r\n            <h4>Relavant Sentences</h4>\r\n          </div>\r\n          <div className=\"answer-list\">\r\n            Number of Sentences to display:\r\n            <Dropdown\r\n              options={options}\r\n              onChange={_onSelect}\r\n              value={defaultOption}\r\n              placeholder=\"Select Type\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"articles\">\r\n        <div className=\"article\">\r\n          <div className=\"title-author-date\">\r\n            <h2>{title}</h2>\r\n            <span>\r\n              {/* Relevant Sentences | Abstract | Body Text | Original PDF ↗︎ */}\r\n              Authors: {author}\r\n              &nbsp;&nbsp;|&nbsp;&nbsp;Publish Date: {doc_date}\r\n            </span>\r\n            <br />\r\n            <NavLink\r\n              to={{\r\n                pathname: `/specificArticle/sentences/${paper_id}`,\r\n                state: { article: article }\r\n              }}\r\n              className=\"inactive\"\r\n              activeClassName=\"active\"\r\n            >\r\n              Relevant Sentences\r\n            </NavLink>{\" \"}\r\n            &nbsp;&nbsp;|&nbsp;&nbsp;\r\n            <NavLink\r\n              to={{\r\n                pathname: `/specificArticle/abstract/${paper_id}`,\r\n                state: { article: article }\r\n              }}\r\n              className=\"inactive\"\r\n              activeClassName=\"active\"\r\n            >\r\n              Abstract\r\n            </NavLink>\r\n            &nbsp;&nbsp;|&nbsp;&nbsp;\r\n            <NavLink\r\n              to={{\r\n                pathname: `/specificArticle/bodyText/${paper_id}`,\r\n                state: { article: article }\r\n              }}\r\n              className=\"inactive\"\r\n              activeClassName=\"active\"\r\n            >\r\n              Body Text\r\n            </NavLink>{\" \"}\r\n            &nbsp;&nbsp;|&nbsp;&nbsp;\r\n            <NavLink\r\n              to={{\r\n                pathname: `/specificArticle/similarPaper/${paper_id}`,\r\n                state: { article: article }\r\n              }}\r\n              className=\"inactive\"\r\n              activeClassName=\"active\"\r\n            >\r\n              Similar Papers\r\n            </NavLink>\r\n            &nbsp;&nbsp;|&nbsp;&nbsp;\r\n            <a target=\"_blank\" href={article_url} className=\"external_link\">\r\n              Original PDF ↗︎\r\n            </a>\r\n            <br />\r\n          </div>\r\n          <div className=\"answer-list\">{checkSents()}</div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}